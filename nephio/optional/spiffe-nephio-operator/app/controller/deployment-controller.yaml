apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  
  name: nephio-controller
  namespace: nephio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      fn.kptgen.dev/controller: nephio-controller
  strategy: {}
  template:
    metadata:
      
      labels:
        app.kubernetes.io/component: tbd
        app.kubernetes.io/instance: tbd
        app.kubernetes.io/managed-by: kpt
        app.kubernetes.io/name: nephio
        app.kubernetes.io/part-of: nephio
        app.kubernetes.io/version: tbd
        fn.kptgen.dev/controller: nephio-controller
      name: nephio-controller
      namespace: nephio-system
    spec:
      containers:    
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources: {}
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: GIT_URL
          value: http://172.18.0.200:3000
        - name: GIT_NAMESPACE
          value: gitea
        - name: ENABLE_APPROVAL
          value: "true"
        - name: ENABLE_REPOSITORIES
          value: "true"
        - name: ENABLE_BOOTSTRAPSECRETS
          value: "true"
        - name: ENABLE_BOOTSTRAPPACKAGES
          value: "true"
        - name: ENABLE_GENERICSPECIALIZER
          value: "true"
        - name: ENABLE_NETWORKS
          value: "true"
        - name: ENABLE_WORKLOADIDENTITY
          value: "false"
        - name: CLIENT_PROXY_ADDRESS
          value: resource-backend-controller-grpc-svc.backend-system.svc.cluster.local:9999
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///spiffe-workload-api/spire-agent.sock 
          # Temporary image
        image: docker.io/nephio/nephio-operator:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: spiffe-workload-api
          mountPath: /spiffe-workload-api
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: nephio-controller
      volumes:
      - name: spiffe-workload-api
        csi:
          driver: "csi.spiffe.io"
          readOnly: true       

status: {}
